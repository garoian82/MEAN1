!function(){"use strict";angular.module("app",["ui.router","app.ui","ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/projects"),t.state("projects",{url:"/projects",templateUrl:"partials/projects/index.html",controller:"ProjectsController",controllerAs:"projectsController",resolve:{users:["Users",function(t){return t.get()}],projects:["Projects","users",function(t,e){return t.get()}]}}).state("projects.detail",{url:"/:projectId",templateUrl:"partials/projects/detail.html",controller:"ProjectController",controllerAs:"projectController",resolve:{project:["Projects","$stateParams","projects",function(t,e,r){return t.find(e.projectId)}]}}).state("projects.detail.edit",{url:"/edit",templateUrl:"partials/projects/edit.html",controller:"EditController",controllerAs:"editController"}).state("new",{url:"/new",templateUrl:"partials/projects/add.html",controller:"AddController",controllerAs:"addController"})}])}(),function(){"use strict";angular.module("app.ui",[])}(),function(){"use strict";angular.module("app").controller("BodyController",["Projects",function(t){var e=this;e.welcome="Hi There",t.get().then(function(t){e.projects=t})}])}(),function(){"use strict";angular.module("app").factory("User",function(){function t(t){_.merge(this,{first_name:"",last_name:"",email:""},t||{})}return t.prototype={fullName:function(){return this.first_name+" "+this.last_name}},t})}(),function(){"use strict";angular.module("app").filter("niceDate",function(){return function(t,e){e=e||"MMMM Do, YYYY";var r=moment(t);return r.format(e)}})}(),function(){"use strict";angular.module("app").controller("EditController",["project","Projects","Users",function(t,e,r){var o=this;o.users=r.users,o.project=t,o.update=e.put}])}(),function(){"use strict";angular.module("app").controller("NewProjectCtrl",["$modalInstance","Users",function(t,e){var r=this;r.users=e.users,r.project={},r.close=function(){t.close(r.project)},r.dismiss=function(){t.dismiss()}}])}(),function(){"use strict";angular.module("app").controller("ProjectController",["project","Projects",function(t,e){var r=this;r.project=t,r.del=e.del}])}(),function(){"use strict";angular.module("app").controller("ProjectsController",["projects","Projects","$modal","$state",function(t,e,r,o){var n=this;n.projects=t,n.remove=e.del,n.addProject=function(){r.open({templateUrl:"javascripts/projects/new.html",controller:"NewProjectCtrl",controllerAs:"newProject",size:"md"}).result.then(function(t){e.post(t)})}}])}(),function(){"use strict";angular.module("app").service("Projects",["$http","$state","Users",function(t,e,r){var o=this;o.projects=[],o.find=function(t){return _.find(o.projects,{_id:t})},o.get=function(){return t.get("/projects").then(function(t){return o.projects.splice(0),t.data.forEach(function(t){t.user=r.find(t.user),o.projects.push(t)}),o.projects})},o.post=function(e){return t.post("/projects/",e).then(function(t){t.data.user=r.find(t.data.user),o.projects.push(t.data)})},o.put=function(r){var o={title:r.title};return t.put("/projects/"+r._id,o).then(function(t){e.go("projects.detail",{projectId:r._id})},function(t){})},o.remove=function(t){_.remove(o.projects,{_id:t._id})},o.del=function(r){return t["delete"]("/projects/"+r).then(function(t){o.remove(r),e.go("projects")})}}])}(),function(){"use strict";angular.module("app").service("Users",["$http","User",function(t,e){var r=this;r.users=[],r.find=function(t){return _.find(r.users,{_id:t})},r.get=function(){return t.get("/users").then(function(t){return r.users.splice(0),t.data.forEach(function(t){r.users.push(new e(t))}),r.users})}}])}(),function(){"use strict";angular.module("app.ui").directive("projectsTable",["Projects",function(t){function e(e){e.remove=t.del}return e.$inject=["$scope"],{restrict:"E",templateUrl:"partials/directives/project-table.html",controller:e,scope:{projects:"=",remove:"="}}}])}();
//# sourceMappingURL=data:application/json;base64,
